---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';



export interface Props {
  title: string;
  description: string;
  current?: string;
  image?: string;  // Add the image prop here
}

const rootUrl = new URL(Astro.url).origin; // Get root URL
const { title, description, current, image = '/images/default-og-image.jpg' } = Astro.props;
---
<html lang="en">
<head>
  <BaseHead title={title} description={description} image={image ? `${rootUrl}${image}` : undefined} />
</head>
<body>
  <div class="layout dark:bg-gray-900">
    <Header current={current} />

    <main>

    
   <div class="container">
    <slot />
   </div>
   
  </main>
 
  </div>

   <Footer />
  <script is:inline src="js/flowbite.min.js"></script>
  <script is:inline>
    // On page load or when changing themes, best to add inline in `head` to avoid FOUC
    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
    } else {
        document.documentElement.classList.remove('dark')
    }
</script>
<!-- <script is:inline>
 var themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
var themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

// Change the icons inside the button based on previous settings
if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
    themeToggleLightIcon.classList.remove('hidden');
} else {
    themeToggleDarkIcon.classList.remove('hidden');
}

var themeToggleBtn = document.getElementById('theme-toggle');

themeToggleBtn.addEventListener('click', function() {

    // toggle icons inside button
    themeToggleDarkIcon.classList.toggle('hidden');
    themeToggleLightIcon.classList.toggle('hidden');

    // if set via local storage previously
    if (localStorage.getItem('color-theme')) {
        if (localStorage.getItem('color-theme') === 'light') {
            document.documentElement.classList.add('dark');
            localStorage.setItem('color-theme', 'dark');
        } else {
            document.documentElement.classList.remove('dark');
            localStorage.setItem('color-theme', 'light');
        }

    // if NOT set via local storage previously
    } else {
        if (document.documentElement.classList.contains('dark')) {
            document.documentElement.classList.remove('dark');
            localStorage.setItem('color-theme', 'light');
        } else {
            document.documentElement.classList.add('dark');
            localStorage.setItem('color-theme', 'dark');
        }
    }
    
});
  </script> -->

  <script is:inline>
    // On page load or when changing themes
    if (window.matchMedia('(prefers-color-scheme: dark)').matches || localStorage.getItem('color-theme') === 'dark') {
      document.documentElement.classList.add('dark');
      // Ensure the light icon is hidden and the dark icon is shown
      document.getElementById('theme-toggle-light-icon').classList.add('hidden');
      document.getElementById('theme-toggle-dark-icon').classList.remove('hidden');   
 
    } else {
      document.documentElement.classList.remove('dark');
      // Ensure the dark icon is hidden and the light icon is shown
      document.getElementById('theme-toggle-dark-icon').classList.add('hidden');
      document.getElementById('theme-toggle-light-icon').classList.remove('hidden');   

    }

    var themeToggleBtn = document.getElementById('theme-toggle');

    themeToggleBtn.addEventListener('click', function() {
      // toggle icons inside button   

      document.getElementById('theme-toggle-dark-icon').classList.toggle('hidden');
      document.getElementById('theme-toggle-light-icon').classList.toggle('hidden');

      // if set via local storage previously
      if (localStorage.getItem('color-theme'))   
 {
        if (localStorage.getItem('color-theme') === 'light') {
          document.documentElement.classList.add('dark');
          localStorage.setItem('color-theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('color-theme', 'light');
        }

      // if NOT set via local storage previously
      } else {
        if (document.documentElement.classList.contains('dark')) {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('color-theme', 'light');
        } else {
          document.documentElement.classList.add('dark');
          localStorage.setItem('color-theme', 'dark');
        }
      }
      
    });
  </script>
</body>

</html>

<style>
  .layout {
    display: flex;
    flex-direction: column;
    min-height: 100%;
    min-height: 100vh;
  }

  main{
    flex: 1;
    position: relative;
    margin: 0 auto;
    box-sizing: border-box;
    width: 100%;
    display: flex;
    flex-direction: column;
  }
</style>
