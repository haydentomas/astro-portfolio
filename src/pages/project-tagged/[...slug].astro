---
import { getCollection } from 'astro:content';
import PostLayout from '../../layouts/PostLayout.astro';
import Icon from '../../components/Icon.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('projectstagged');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, 
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Fetch posts ONLY from the "projectstagged" collection
const allPosts = (await getCollection('projectstagged'))
  .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

const findCurrentPostIndex = (slug: string) => {
  // Find index within the "projectstagged" posts
  return allPosts.findIndex(post => post.slug === slug);
};

const currentSlug = Astro.params.slug; 
const currentIndex = findCurrentPostIndex(currentSlug);

// Get neighboring posts with error handling and collection-specific filtering
const previousPost = currentIndex > 0 ? allPosts[currentIndex - 1] : null;
const nextPost = currentIndex < allPosts.length - 1 ? allPosts[currentIndex + 1] : null;



---




<PostLayout frontmatter={entry.data}>
  <div class="flex gap-2 mt-2"> 
    {entry.data.icons?.map(icon => <Icon name={icon} />)}
  </div>

  <Content />

  <div class="w-auto mx-auto text-center mt-8">
    {currentIndex > 0 && previousPost && (
      <a href={`/project-tagged/${previousPost.slug}`} class="text-blue-500 hover:text-blue-700 block text-left"> ⬅️ Previous: {previousPost.data.title}</a>
    )}

    {currentIndex < allPosts.length - 1 && nextPost && (
      <a href={`/project-tagged/${nextPost.slug}`} class="text-blue-500 hover:text-blue-700 block text-right"> Next: {nextPost.data.title} ➡️</a>
    )}
  </div>

</PostLayout>