---
import { getCollection } from 'astro:content';
import PostLayout from '../../layouts/PostLayout.astro';
import Icon from '../../components/Icon.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('projectstagged');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, 
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Fetch ALL posts from "projectstagged" collection
const allPosts = await getCollection("projectstagged");

// Sort the posts
const sortedPosts = allPosts.sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

const findCurrentPostIndex = (slug: string) => {
  // Find index within the sorted posts
  return sortedPosts.findIndex(post => post.slug === slug);
};

const currentSlug = Astro.params.slug; 
const currentIndex = findCurrentPostIndex(currentSlug);

// Get neighboring posts ONLY from "projectstagged" collection
const previousPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;
const nextPost = currentIndex < sortedPosts.length - 1 ? sortedPosts[currentIndex + 1] : null;


// Filter the posts that match the same tag
const filteredPosts = allPosts.filter(post => {
  return (post.data.tags || []).some(tag => (entry.data.tags || []).includes(tag));
});

// Get neighboring posts from the filtered and sorted array
const filteredPreviousPost = filteredPosts.filter(post => {
  return new Date(post.data.pubDate).getTime() < new Date(entry.data.pubDate).getTime();
}).sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime())[0];

const filteredNextPost = filteredPosts.filter(post => {
  return new Date(post.data.pubDate).getTime() > new Date(entry.data.pubDate).getTime();
}).sort((a, b) => new Date(a.data.pubDate).getTime() - new Date(b.data.pubDate).getTime())[0];


---




<PostLayout frontmatter={entry.data}>
  <div class="flex gap-2 mt-2"> 
    {entry.data.icons?.map(icon => <Icon name={icon} />)}
  </div>

  <Content />

  <div class="w-auto mx-auto text-center mt-8">
    {/* Show Previous link if there's a previous post in the same tag category */}
    {filteredPreviousPost && (
      <a href={`/project-tagged/${filteredPreviousPost.slug}`} class="text-blue-500 hover:text-blue-700 block text-left"> ⬅️ Previous: {filteredPreviousPost.data.title}</a>
    )}

    {/* Show Next link if there's a next post in the same tag category */}
    {filteredNextPost && (
      <a href={`/project-tagged/${filteredNextPost.slug}`} class="text-blue-500 hover:text-blue-700 block text-right"> Next: {filteredNextPost.data.title} ➡️</a>
    )}
  </div>

</PostLayout>