---
import { getCollection } from 'astro:content';
import { Picture } from 'astro:assets';
import MainLayout from '../../layouts/MainLayout.astro';
import Icon from '../../components/Icon.astro';
import type { IconName } from '../../types';

// Define a basic structure for the pagination result
type PaginationResult = {
    currentPage: number;
    lastPage: number;
    data: any[]; // Adjust the type to match the structure of your paginated items
    url: {
        prev?: string;
        next?: string;
    };
};


type PaginateFunction = (items: any[], config: { pageSize: number }) => Promise<PaginationResult>;

    export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const allPages = await getCollection('projectstagged', ({ data }) => {
    return data.draft !== true; // Filter out drafts
  });

  // Sort the pages array by pubDate (descending order - newest first)
  allPages.sort((a, b) => {
    // Handle cases where pubDate might be missing or invalid
    const dateA = a.data.pubDate ? new Date(a.data.pubDate) : new Date(0);
    const dateB = b.data.pubDate ? new Date(b.data.pubDate) : new Date(0);
    return dateB.getTime() - dateA.getTime();
  });

  return paginate(allPages, { pageSize: 3 }); // Adjust pageSize as needed
}


const { page }: { page: PaginationInfo } = Astro.props;
const { prev, next } = page.url;

// Define a type for the pagination information
type PaginationInfo = {
    currentPage: number;
    lastPage: number;
    data: PostItem[];
    url: {
        prev?: string;
        next?: string;
    };
};


// Define a type for the individual post item
type PostItem = {
  data: {
    title: string;
    description: string;
    imageprojects: string;
    imageAlt: string;
    icons: IconName[]; // Add the icons property
  };
  slug: string;
};
const title = 'Projects tagged Hayden Tomas - Website Developer';
const description = 'A UK Based front-end developer who focuses on building fast, secure websites that are accessible to all.';
const Name = 'Hayden Tomas - Website Developer';
---
<MainLayout title={title} description={description}>
    <main>
    <section class="py-8 lg:py-16">
        <div class="mx-auto max-w-7xl px-6 lg:px-8">
            <div class="mx-auto max-w-2xl text-center">
              <h1>My recent projects</h1>
              <p class="mt-2 text-lg leading-8 text-gray-600">WordPress / Astro / Agency Life</p>
            </div>
    
          </div>




          <div class="grid grid-cols-3 gap-10">
            {page.data.map(({ data, slug }) => (
                <a href={`/project/${slug}`} class="">
                    <div class="">
                         <div class="">
                            <Picture formats={['avif', 'webp']} src={data.imageprojects} alt={data.imageAlt} height="814" width="1082" class="rounded-xl"/>
                        </div>
                        <div class="icons flex gap-2 mt-2 mb-2">
                       {data.icons?.map(icon => <Icon name={icon} />)}
                       </div>
                        <h3 class="mb-2 mt-2 text-2xl tracking-tight text-gray-900 dark:text-white">{data.title} </h3>
                      
                        <p>{data.description}</p>
                       
                       
                    </div>
                </a>
            ))}
        </div>
    
        <div class="text-center">
            <p>Page {page.currentPage} of {page.lastPage}</p>
    
            <div class="text-center">
                {prev && <a href={prev} class="inline-block mr-4 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700">Previous Page</a>}
                {next && <a href={next} class="inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700">Next Page</a>}
            </div>
        </div>
    </section>
 
    </main>
    
</MainLayout>


<style>
.icons {
@apply bg-slate-800 pl-2 pt-1 pb-1 rounded-lg;

p {
    margin:0;
    @apply text-gray-200 text-sm
}
}
</style>