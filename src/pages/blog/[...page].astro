---
import { getCollection } from 'astro:content';
import { Picture } from 'astro:assets';
import MainLayout from '../../layouts/MainLayout.astro';
import Button from '../../components/Button.astro';

// Define a basic structure for the pagination result
type PaginationResult = {
    currentPage: number;
    lastPage: number;
    data: any[]; // Adjust the type to match the structure of your paginated items
    url: {
        prev?: string;
        next?: string;
    };
};


type PaginateFunction = (items: any[], config: { pageSize: number }) => Promise<PaginationResult>;

    export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const allPages = await getCollection('posts', ({ data }) => {
    return data.draft !== true; // Filter out drafts
  });

  // Sort the pages array by pubDate (descending order - newest first)
  allPages.sort((a, b) => {
    // Handle cases where pubDate might be missing or invalid
    const dateA = a.data.pubDate ? new Date(a.data.pubDate) : new Date(0);
    const dateB = b.data.pubDate ? new Date(b.data.pubDate) : new Date(0);
    return dateB.getTime() - dateA.getTime();
  });

  return paginate(allPages, { pageSize: 3 }); // Adjust pageSize as needed
}





const { page }: { page: PaginationInfo } = Astro.props;
const { prev, next } = page.url;

// Define a type for the pagination information
type PaginationInfo = {
    currentPage: number;
    lastPage: number;
    data: PostItem[];
    url: {
        prev?: string;
        next?: string;
    };
};


// Define a type for the individual post item
type PostItem = {
    data: {
        title: string;
        description: string;
        image: string;
        imageAlt: string;
        pubDate?: string; // Make pubDate optional
    };
    slug: string;
};



const title = 'Blog Hayden Tomas - Website Developer';
const description = 'A UK Based front-end developer who focuses on building fast, secure websites that are accessible to all.';
const Name = 'Hayden Tomas - Website Developer';
---
<MainLayout title={title} description={description}>
    <main>
        <section class="hero grid py-8 mx-auto lg:gap-20 xl:gap-0 lg:py-16 lg:grid-cols-12">
            <div class="mr-auto lg:col-span-12">
          
              <div class="">
                <div class="mx-auto max-w-7xl px-6 lg:px-8">
                  <div class="mx-auto max-w-2xl text-center">
                    <h1>From the blog</h1>
                    <p class="mt-2 text-lg leading-8 text-gray-600">Web Development / Marketing / Agency Life</p>
                  </div>
          
                </div>
              </div>
            <div class="grid lg:grid-cols-3 gap-10">
            {page.data.map(({ data, slug }) => (
                 
                           
                        
                <a href={`/posts/${slug}`} class="">
                    <div class="bg-white   rounded-2xl shadow-2xl dark:bg-gray-800 p-1">
                        <Picture formats={['avif', 'webp']} src={data.image} alt={data.imageAlt} height="200" width="300" class="rounded-t-2xl shadow-lg object-cover object-center w-full h-full"/>
                     <div class="p-5">
                        <h5 class="mb-2 text-2xl tracking-tight text-gray-900 dark:text-white">{data.title}</h5>
                        {data.pubDate && ( /* Conditionally display pubDate if it exists */
                        <p class="text-xs font-bold text-gray-900 dark:text-white uppercase">Published: {new Date(data.pubDate).toLocaleDateString()}</p>
                    )}
                         <p class="mb-3 font-light  text-lg text-gray-700 dark:text-white">{data.description}</p>
                        
                     </div>
                       
                    </div>
                </a>
            ))}
        </div>
               
        
            </div>
        
          </section>
       
    
        <div class="text-center">
            <p>Page {page.currentPage} of {page.lastPage}</p>
    
            <div class="text-center">
                {prev && <a href={prev} class="inline-block mr-4 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700">Previous Page</a>}
                {next && <a href={next} class="inline-block bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700">Next Page</a>}
            </div>
        </div>
    </main>
    
</MainLayout>
