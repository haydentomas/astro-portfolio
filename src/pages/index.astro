---

import MainLayout from '../layouts/MainLayout.astro';
import { getCollection } from 'astro:content';
import { Picture } from 'astro:assets';
import Button from '../components/Button.astro';
import ButtonSlim from '../components/ButtonSlim.astro';
import TestimonialTabs from '../components/TestimonialTabs.astro';


import Icon from '../components/Icon.astro';
import HR from '../components/HR.astro';
const allPosts = await getCollection("posts");
const allProjects = await getCollection("projects");
const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

const title = 'Hayden Tomas - Website Developer';
const description = 'A UK Based front-end developer who focuses on building fast, secure websites that are accessible to all.';
const Name = 'Hayden Tomas - Website Developer';
const image = '/images/your-og-image.jpg'; // Relative path to your OG image

// Define a type for the individual post item (adjusted)
type PostItem = {
    data: {
        title: string;
        subTitle: string;
        description: string;
        image: any; // Use a generic type for the image property
        imageAlt: string;
        pubDate?: string; // Make pubDate optional
        icons?: string[]; // Add the icons property here
    };
    slug: string;
};

// Fetch the latest 3 posts (replace 'posts' with your actual collection name if different)
const posts = await getCollection('posts', ({ data }) => data.draft !== true);
posts.sort((a, b) => {
    const dateA = a.data.pubDate ? new Date(a.data.pubDate) : new Date(0);
    const dateB = b.data.pubDate ? new Date(b.data.pubDate) : new Date(0);
    return dateB.getTime() - dateA.getTime();
});
const latestPosts = posts.slice(0, 3) as unknown as PostItem[]; // Type assertion








// Fetch the latest 3 posts (replace 'posts' with your actual collection name if different)
const projects = await getCollection('projectstagged', ({ data }) => data.draft !== true);
projects.sort((a, b) => {
    const dateA = a.data.pubDate ? new Date(a.data.pubDate) : new Date(0);
    const dateB = b.data.pubDate ? new Date(b.data.pubDate) : new Date(0);
    return dateB.getTime() - dateA.getTime();
});
const latestProjects = projects.slice(0, 2) as unknown as PostItem[]; // Type assertion






// Import the <Image /> component
import { Image } from "astro:assets"
// Import a reference to the image itself
import whatIdoImage from "../assets/sr-designer.png"


import ServicesBlocks from '../components/ServicesBlocks.astro';
import ActionButton from '../components/ActionButton.astro';
---
<MainLayout title={title} description={description} image={image}>


    <section class="">
        <div class="grid py-8 mx-auto lg:gap-8 xl:gap-0 lg:py-16 lg:grid-cols-12">
            <div class="mr-auto place-self-center lg:col-span-7">
                <p class="  font-semibold">Hi, I'm Hayden</p>
                <h1>I design and develop secure, accessible and scalable websites</h1>
                <p class="max-w-2xl">I am passionate about building websites that are accessible to people of all abilities. My passion is creating websites that loading extremely quickly, are loved by Google and are visible to all.</p>
                <p class="max-w-2xl mb-6 font-semibold  lg:mb-8 md:text-lg lg:text-3xl dark:text-white">Do you have a project in mind? </p>
                <span class="inline-flex items-center justify-center pr-5 py-3 mr-3 text-base font-medium text-center  rounded-lg bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:focus:ring-primary-900 dark:text-white">
                    Get started
                    <svg class="w-5 h-5 ml-2 -mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                </span>
              
                <Button href="/contact" aria="Start your project" href="/contact">Contact Hayden</Button>
            
            </div>
            <div class="hidden lg:mt-0 lg:col-span-5 lg:flex">
                
                <Image loading="eager" src={whatIdoImage}
                widths={[240, 540, 720, whatIdoImage.width]}
                sizes={`(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1600px) 720px, ${whatIdoImage.width}px`}
                alt="Hayden Tomas = Front end website developer" class=""
              />
            </div>                
        </div>
    </section>
    






    <section class="w-full py-8 sm:py-12 md:py-16">
        <div class="mx-auto">
            <div class="flex items-center justify-between w-full pb-5 mb-8 border-b border-gray-700 ">
                <div class="title flex items-center justify-center">
                    <h2 class="text-3xl mb-0 font-bold dark:text-white ">Projects</h2>
                </div>
                <a href="/blog" class="flex items-center text-base font-semibold text-gray-900 dark:text-white group">
                    <span>View More</span>
                    <svg class="w-4 h-4 mt-0.5 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>
                </a>
            </div>
            <div class="grid grid-cols-12 gap-6">
                {latestProjects.map(({ data, slug }, index) => (
                  <div class="relative col-span-12 mb-10 space-y-4  lg:col-span-12">
                    <div class={`flex flex-col md:flex-row items-center bg-red-500 ${index % 2 === 0 ? 'lg:flex-row' : 'md:flex-row-reverse'}`}>
                      <a href={`/project/${slug}`} class="relative bg-green-500 block w-full h-full md:w-6/12">
                        <Picture formats={['avif', 'webp']} src={data.image} alt={data.imageAlt} width="651"  height="795" class="mb-10" />
                      </a>
                      <div 
                        class={`
                          ${index % 2 === 0 ? 'lg:p-20 bg-blue-500 lg:pr-0 md:pr-0' : ' bg-pink-500 lg:pl-0 lg:pr-20'} lg:w-6/12
                        `}
                      >
                    
                        <a href={`/project/${slug}`}>
                          <h2 class="mb-4 text-4xl tracking-tight text-gray-900 dark:text-white">{data.title}</h2>
                        </a>

                     
                        <p class="mb-3 font-light text-m text-gray-700 dark:text-white">{data.description}</p>
                        <div class="flex gap-2 mb-5 icons">
                          {data.icons?.map(icon => <Icon name={icon}/>)}
                        </div> 
                        <ButtonSlim href={`/project/${slug}`} aria={data.title}>Read more</ButtonSlim>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
        </div>
    </section>
   

<TestimonialTabs></TestimonialTabs>


<section class="w-full py-8 sm:py-12 md:py-16">
    <div class="mx-auto">
        <div class="flex items-center justify-between w-full pb-5 mb-8 border-b border-gray-700 ">
         <div class="title flex items-center justify-center">
            <h2 class="text-3xl mb-0 font-bold dark:text-white ">Posts</h2>
         </div>
            <a href="/blog" class="flex items-center text-base font-semibold text-gray-900 dark:text-white group">
                <span>View More</span>
                <svg class="w-4 h-4 mt-0.5 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>
            </a>
        </div>
        <div class="grid grid-cols-12 gap-6">
            {latestPosts.map(({ data, slug }) => ( 
<div class="relative col-span-12 mb-10 space-y-4 md:col-span-6 lg:col-span-4">
<div class=" bg-white shadow-2xl dark:bg-gray-800 p-1 ">
    <a href={`/posts/${slug}`} class="relative block w-full h-64 ">
                  
                  <Picture formats={['avif', 'webp']} src={data.image} alt={data.imageAlt} height="200" width="300" class=" shadow-lg object-cover object-center w-full h-full"/>
              </a>
    <div class="p-5">
        <a href={`/posts/${slug}`}>
            <h5 class="mb-2 text-2xl tracking-tight text-gray-900 dark:text-white">{data.title}</h5>
        </a>
        {data.pubDate && ( /* Conditionally display pubDate if it exists */
                        <p class="text-xs font-bold text-gray-900 dark:text-white uppercase">Published: {new Date(data.pubDate).toLocaleDateString()}</p>
                    )}
        <p class="mb-3 font-light  text-lg text-gray-700 dark:text-white">{data.description}</p>
   <ButtonSlim href={`/posts/${slug}`}  aria={data.title}>Read more</ButtonSlim>
    </div>
</div>
</div>       
     ))}  
        </div>
    </div>
</section>

<section class="bg-white dark:bg-gray-900">
    <div
        class="gap-8 items-center py-8  mx-auto  xl:gap-16 md:grid md:grid-cols-2 sm:py-16">
        <img class="w-full dark:hidden"
            src="https://flowbite.s3.amazonaws.com/blocks/marketing-ui/cta/cta-dashboard-mockup.svg"
            alt="dashboard image">
        <img class="w-full hidden dark:block"
            src="https://flowbite.s3.amazonaws.com/blocks/marketing-ui/cta/cta-dashboard-mockup-dark.svg"
            alt="dashboard image">
        <div class="mt-4 md:mt-0">
            <h2 class="mb-4 text-4xl text-gray-900 dark:text-white">Have a question?</h2>
            <p class="mb-6">If you have a question, wish to discuss your next project or hire me for a simple development task, then I am more than happy to help. Click the button below to get started. </p>
                <Button href="/contact"  aria="Contact me">Contact me</Button>
               
        </div>
    </div>
</section>   
</MainLayout>





<style>
    .icons {


    img {
        @apply bg-slate-800 border border-slate-500 rounded-sm p-[2px] w-8 shadow-sm;

    }
    }
</style>