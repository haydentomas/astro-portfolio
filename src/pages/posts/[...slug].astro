---
import { getCollection } from 'astro:content';
import PostLayout from '../../layouts/PostLayout.astro';
// import Icon from '../../components/Icon.astro'; // Commented out for this example

export async function getStaticPaths() {
  const blogEntries = await getCollection('posts'); // Note: "posts" is used here, adjust as needed
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, 
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Fetch ALL posts
const allPosts = await getCollection("posts"); // Note: "posts" is used here, adjust as needed

// Filter posts based on tag (if applicable)
const postsWithTag = entry.data.tags
  ? allPosts.filter(post => post.data.tags && post.data.tags.includes(entry.data.tags[0]))
  : allPosts; // If no tags, use all posts

// Sort the filtered posts
const sortedPosts = postsWithTag.sort(
  (a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

const findCurrentPostIndex = (slug: string) => {
  // Find index within the filtered and sorted posts
  return sortedPosts.findIndex(post => post.slug === slug);
};

const currentSlug = Astro.params.slug; 
const currentIndex = findCurrentPostIndex(currentSlug);

// Get neighboring posts from the filtered and sorted array
const previousPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;
const nextPost = currentIndex < sortedPosts.length - 1 ? sortedPosts[currentIndex + 1] : null;

---


<PostLayout frontmatter={entry.data}>

  <Content />

  <div class="w-auto mx-auto text-center mt-8"> 
    {/* Only show Previous if currentIndex is NOT 0 (not the first post) */}
    {currentIndex !== 0 && previousPost && (
      <a href={`/posts/${previousPost.slug}`} class="text-blue-500 hover:text-blue-700 block text-left"> ⬅️ Previous: {previousPost.data.title}</a>
    )}

    {/* Only show Next if it's NOT the last post */}
    {nextPost && (
      <a href={`/posts/${nextPost.slug}`} class="text-blue-500 hover:text-blue-700 block text-right"> Next: {nextPost.data.title} ➡️</a>
    )}
  </div>

</PostLayout>



